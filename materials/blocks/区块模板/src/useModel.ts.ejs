import { useState } from '@/hooks/useState';
<% if(form.filter(s=>s.type==="Select").length){ %>
type OptionItem = {
  value: string;
  label: string;
};
<% } %>
<% if(form.length){ %>
const defaultFormData = {
  <% form.map(item => { %>
  <%= item.name %>: '',
  <% }) %>
};
<% } %>
<% if(form.length){ %>
const defaultValidItem = {
  valid: true,
  help: '',
};
<% } %>
<% if(form.length){ %>
const defaultValidInfo = {
  <% form.map(item => { %>
	<%= item.name %>: defaultValidItem,
  <% }) %>
};
<% } %>

const useModel = () => {
  <% if(form.length){ %>const [formData, setFormData] = useState(defaultFormData);<% } %>
  <% if(form.length){ %>const [validInfo, setValidInfo] = useState(defaultValidInfo);<% } %>
  <% if(form.filter(s=>s.type==="Select").length){ %>
  const [options, setOptions] = useState<{ 
	  <% form.filter(s=>s.type==="Select").map(item=>{ %>
	   <%= item.name %>: OptionItem[];
	  <% }) %>
	}>({
	<% form.filter(s=>s.type==="Select").map(item=>{ %>
	  <%= item.name %>: [],
	<% }) %>
  });
  <% } %>
  const [loading, setLoading] = useState<{
    submit: boolean;
  }>({ submit: false });
  <% if(form.length){ %>
  const valid = () => {
    let v = true;
	<% form.map(item=>{ %>
		<% if(item.required){ %>
			if (!formData.<%= item.name %>) {
				v = false;
				setValidInfo(s => {
				  s.<%= item.name %>.valid = false;
				  s.<%= item.name %>.help = '<%= item.required %>';
				});
			}
		<% } %>
		<% if(item.minLength){ %>
			if (formData.<%= item.name %>.length < <%= item.minLength %>) {
				v = false;
				setValidInfo(s => {
				  s.<%= item.name %>.valid = false;
				  s.<%= item.name %>.help = '不能少于<%= item.minLength %>个字';
				});
			}
		<% } %>
		<% if(item.regular){ %>
			if (!/<%= item.regular %>/g.test(formData.<%= item.name %>)) {
				v = false;
				setValidInfo(s => {
				  s.<%= item.name %>.valid = false;
				  s.<%= item.name %>.help = '格式不正确';
				});
			  }
		<% } %>
	<% }) %>
    return v;
  };
  <% } %>

  const reset = () => {
	<% if(form.length){ %>
    setFormData(defaultFormData);
    setValidInfo(defaultValidInfo);
	<% } %>
  };

  return {
	<% if(form.length){ %>
    formData,
    setFormData,
    validInfo,
    setValidInfo,
	valid,
	<% } %>
	<% if(form.filter(s=>s.type==="Select").length){ %>
    options,
    setOptions,
	<% } %>
    loading,
    setLoading,
    reset,
  };
};

export default useModel;
